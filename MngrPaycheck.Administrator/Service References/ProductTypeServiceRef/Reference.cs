//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MngrPaycheck.Administrator.ProductTypeServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductTypeServiceRef.IProductTypeRepositoryService")]
    public interface IProductTypeRepositoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductTypeRepositoryService/GetProductTypes", ReplyAction="http://tempuri.org/IProductTypeRepositoryService/GetProductTypesResponse")]
        string GetProductTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductTypeRepositoryService/GetProductTypes", ReplyAction="http://tempuri.org/IProductTypeRepositoryService/GetProductTypesResponse")]
        System.Threading.Tasks.Task<string> GetProductTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductTypeRepositoryService/AddProductType", ReplyAction="http://tempuri.org/IProductTypeRepositoryService/AddProductTypeResponse")]
        void AddProductType(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductTypeRepositoryService/AddProductType", ReplyAction="http://tempuri.org/IProductTypeRepositoryService/AddProductTypeResponse")]
        System.Threading.Tasks.Task AddProductTypeAsync(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductTypeRepositoryService/DeleteProductType", ReplyAction="http://tempuri.org/IProductTypeRepositoryService/DeleteProductTypeResponse")]
        void DeleteProductType(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductTypeRepositoryService/DeleteProductType", ReplyAction="http://tempuri.org/IProductTypeRepositoryService/DeleteProductTypeResponse")]
        System.Threading.Tasks.Task DeleteProductTypeAsync(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductTypeRepositoryService/UpdateProductTypes", ReplyAction="http://tempuri.org/IProductTypeRepositoryService/UpdateProductTypesResponse")]
        void UpdateProductTypes(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductTypeRepositoryService/UpdateProductTypes", ReplyAction="http://tempuri.org/IProductTypeRepositoryService/UpdateProductTypesResponse")]
        System.Threading.Tasks.Task UpdateProductTypesAsync(string json);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductTypeRepositoryServiceChannel : MngrPaycheck.Administrator.ProductTypeServiceRef.IProductTypeRepositoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductTypeRepositoryServiceClient : System.ServiceModel.ClientBase<MngrPaycheck.Administrator.ProductTypeServiceRef.IProductTypeRepositoryService>, MngrPaycheck.Administrator.ProductTypeServiceRef.IProductTypeRepositoryService {
        
        public ProductTypeRepositoryServiceClient() {
        }
        
        public ProductTypeRepositoryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductTypeRepositoryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductTypeRepositoryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductTypeRepositoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetProductTypes() {
            return base.Channel.GetProductTypes();
        }
        
        public System.Threading.Tasks.Task<string> GetProductTypesAsync() {
            return base.Channel.GetProductTypesAsync();
        }
        
        public void AddProductType(string json) {
            base.Channel.AddProductType(json);
        }
        
        public System.Threading.Tasks.Task AddProductTypeAsync(string json) {
            return base.Channel.AddProductTypeAsync(json);
        }
        
        public void DeleteProductType(string json) {
            base.Channel.DeleteProductType(json);
        }
        
        public System.Threading.Tasks.Task DeleteProductTypeAsync(string json) {
            return base.Channel.DeleteProductTypeAsync(json);
        }
        
        public void UpdateProductTypes(string json) {
            base.Channel.UpdateProductTypes(json);
        }
        
        public System.Threading.Tasks.Task UpdateProductTypesAsync(string json) {
            return base.Channel.UpdateProductTypesAsync(json);
        }
    }
}
