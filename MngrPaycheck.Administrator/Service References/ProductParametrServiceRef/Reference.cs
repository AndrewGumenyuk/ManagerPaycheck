//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MngrPaycheck.Administrator.ProductParametrServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductParametrServiceRef.IProductParameterRepositoryService")]
    public interface IProductParameterRepositoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductParameterRepositoryService/GetProductParameters", ReplyAction="http://tempuri.org/IProductParameterRepositoryService/GetProductParametersRespons" +
            "e")]
        string GetProductParameters();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductParameterRepositoryService/GetProductParameters", ReplyAction="http://tempuri.org/IProductParameterRepositoryService/GetProductParametersRespons" +
            "e")]
        System.Threading.Tasks.Task<string> GetProductParametersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductParameterRepositoryService/AddProductParameter", ReplyAction="http://tempuri.org/IProductParameterRepositoryService/AddProductParameterResponse" +
            "")]
        void AddProductParameter(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductParameterRepositoryService/AddProductParameter", ReplyAction="http://tempuri.org/IProductParameterRepositoryService/AddProductParameterResponse" +
            "")]
        System.Threading.Tasks.Task AddProductParameterAsync(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductParameterRepositoryService/DeleteProductParameter", ReplyAction="http://tempuri.org/IProductParameterRepositoryService/DeleteProductParameterRespo" +
            "nse")]
        void DeleteProductParameter(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductParameterRepositoryService/DeleteProductParameter", ReplyAction="http://tempuri.org/IProductParameterRepositoryService/DeleteProductParameterRespo" +
            "nse")]
        System.Threading.Tasks.Task DeleteProductParameterAsync(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductParameterRepositoryService/UpdateProductParameter", ReplyAction="http://tempuri.org/IProductParameterRepositoryService/UpdateProductParameterRespo" +
            "nse")]
        void UpdateProductParameter(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductParameterRepositoryService/UpdateProductParameter", ReplyAction="http://tempuri.org/IProductParameterRepositoryService/UpdateProductParameterRespo" +
            "nse")]
        System.Threading.Tasks.Task UpdateProductParameterAsync(string json);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductParameterRepositoryServiceChannel : MngrPaycheck.Administrator.ProductParametrServiceRef.IProductParameterRepositoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductParameterRepositoryServiceClient : System.ServiceModel.ClientBase<MngrPaycheck.Administrator.ProductParametrServiceRef.IProductParameterRepositoryService>, MngrPaycheck.Administrator.ProductParametrServiceRef.IProductParameterRepositoryService {
        
        public ProductParameterRepositoryServiceClient() {
        }
        
        public ProductParameterRepositoryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductParameterRepositoryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductParameterRepositoryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductParameterRepositoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetProductParameters() {
            return base.Channel.GetProductParameters();
        }
        
        public System.Threading.Tasks.Task<string> GetProductParametersAsync() {
            return base.Channel.GetProductParametersAsync();
        }
        
        public void AddProductParameter(string json) {
            base.Channel.AddProductParameter(json);
        }
        
        public System.Threading.Tasks.Task AddProductParameterAsync(string json) {
            return base.Channel.AddProductParameterAsync(json);
        }
        
        public void DeleteProductParameter(string json) {
            base.Channel.DeleteProductParameter(json);
        }
        
        public System.Threading.Tasks.Task DeleteProductParameterAsync(string json) {
            return base.Channel.DeleteProductParameterAsync(json);
        }
        
        public void UpdateProductParameter(string json) {
            base.Channel.UpdateProductParameter(json);
        }
        
        public System.Threading.Tasks.Task UpdateProductParameterAsync(string json) {
            return base.Channel.UpdateProductParameterAsync(json);
        }
    }
}
