//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MngrPaycheck.Administrator.ProductServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServiceRef.IProductRepositoryService")]
    public interface IProductRepositoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductRepositoryService/GetProducts", ReplyAction="http://tempuri.org/IProductRepositoryService/GetProductsResponse")]
        string GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductRepositoryService/GetProducts", ReplyAction="http://tempuri.org/IProductRepositoryService/GetProductsResponse")]
        System.Threading.Tasks.Task<string> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductRepositoryService/AddProduct", ReplyAction="http://tempuri.org/IProductRepositoryService/AddProductResponse")]
        void AddProduct(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductRepositoryService/AddProduct", ReplyAction="http://tempuri.org/IProductRepositoryService/AddProductResponse")]
        System.Threading.Tasks.Task AddProductAsync(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductRepositoryService/DeleteProduct", ReplyAction="http://tempuri.org/IProductRepositoryService/DeleteProductResponse")]
        void DeleteProduct(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductRepositoryService/DeleteProduct", ReplyAction="http://tempuri.org/IProductRepositoryService/DeleteProductResponse")]
        System.Threading.Tasks.Task DeleteProductAsync(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductRepositoryService/UpdateProducts", ReplyAction="http://tempuri.org/IProductRepositoryService/UpdateProductsResponse")]
        void UpdateProducts(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductRepositoryService/UpdateProducts", ReplyAction="http://tempuri.org/IProductRepositoryService/UpdateProductsResponse")]
        System.Threading.Tasks.Task UpdateProductsAsync(string json);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductRepositoryServiceChannel : MngrPaycheck.Administrator.ProductServiceRef.IProductRepositoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductRepositoryServiceClient : System.ServiceModel.ClientBase<MngrPaycheck.Administrator.ProductServiceRef.IProductRepositoryService>, MngrPaycheck.Administrator.ProductServiceRef.IProductRepositoryService {
        
        public ProductRepositoryServiceClient() {
        }
        
        public ProductRepositoryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductRepositoryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductRepositoryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductRepositoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<string> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public void AddProduct(string json) {
            base.Channel.AddProduct(json);
        }
        
        public System.Threading.Tasks.Task AddProductAsync(string json) {
            return base.Channel.AddProductAsync(json);
        }
        
        public void DeleteProduct(string json) {
            base.Channel.DeleteProduct(json);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(string json) {
            return base.Channel.DeleteProductAsync(json);
        }
        
        public void UpdateProducts(string json) {
            base.Channel.UpdateProducts(json);
        }
        
        public System.Threading.Tasks.Task UpdateProductsAsync(string json) {
            return base.Channel.UpdateProductsAsync(json);
        }
    }
}
